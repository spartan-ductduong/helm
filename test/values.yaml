# Default values for chargefuze.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

containerPort: 8080

imagePullSecrets: []
nameOverride: "run-helm-check"
fullnameOverride: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  type: ClusterIP
  port: 80
  protocol: TCP
  name: http

frontendConfig:
  redirectToHttps:
    responseCodeName: MOVED_PERMANENTLY_DEFAULT

backendConfig:
  sessionAffinity:
    affinityType: GENERATED_COOKIE
    affinityCookieTtlSec: 60
  securityPolicyName: example-policy

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: gce
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific

managedCertificate:
  domains:
  - chart-example.local

livenessProbe:
 httpGet:
   path: /health
   port: 80
 initialDelaySeconds: 3
 timeoutSeconds: 3
 failureThreshold: 6
startupProbe:
 httpGet:
   path: /health
   port: 80
 initialDelaySeconds: 3
 timeoutSeconds: 3
 failureThreshold: 6
readinessProbe:
 httpGet:
   path: /health
   port: 80
 initialDelaySeconds: 3
 timeoutSeconds: 3
 failureThreshold: 6

resources:
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
 limits:
   cpu: 100m
   memory: 128Mi
 requests:
   cpu: 100m
   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

testConnection:
  enabled: true

secret:
  asFile:
    enabled: true
    mountPath: "/data/config"
    data:
     secret.txt: SECRET_FILE_AS_BASE64
  asEnv:
    enabled: true
    data:
     SECRET_NAME: SECRET_NAME_AS_BASE64
  externalSecretEnv:
    enabled: true
    name: external-secret-env
  externalSecretFile:
    enabled: true
    name: external-secret-file
    mountPath: "/data/config"

configMap:
  asFile:
    enabled: true
    mountPath: "/data/config"
    data:
     nginx.conf: |
       server {
           location / {
               root /data/www;
           }
           location /images/ {
               root /data;
           }
       }
  asEnv:
    enabled: true
    data:
     SERVICE_NAME: nginx
  externalConfigMapEnv:
    enabled: true
    name: external-config-map-env
  externalConfigMapFile:
    enabled: true
    name: external-config-map-file
    mountPath: "/data/config"

workers:
  - name: worker-1
    enabled: true
    command: "echo worker-1"
    replicaCount: 1
    terminationGracePeriodSeconds: 180
    resources: {}
    podAnnotations: {}

hooks:
  - name: "ls"
    enabled: true
    hookTypes: "post-install,post-upgrade"
    hookWeight: 0
    commands:
      - ls -la
    resources: {}
    customImage:
      enabled: false
      image: busybox
    podAnnotations: {}
    restartPolicy: Never
    backoffLimit: 0
